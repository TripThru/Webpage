########## API #########
class SocketIOClient

  constructor: (@url, @token, @id) ->
    @socket = null
    @connected = false
    @products = []
    @rejectedResponse = {
      result_code: 430,
      result: 'Not implemented'
    }
    @successfulResponse = {
      result_code: 200,
      result: 'ok'
    }
    @lastUpdateByTripId = {

    };
    @getConnection (socket) =>

  setProducts: (products) =>
    @products = products
    for product in products
      if !product.image_url?
        product.image_url = 'http://www.tripthru.com/assets/networks/' + @id

  getConnection: (callback, forceConnection) =>
    if not @connected
      $('#socket-status').html('Establishing connection...' + if forceConnection then '&replace=true' else '')
      @socket = io.connect(@url,{
        forceNew: true
        query: 'token=' + @token + (if forceConnection then '&replace=true' else '')
        transports: ['websocket']
      })
      @socket.on('connect', () =>
        console.log('Socket.IO connected')
        $('#incoming-socket-status').removeClass()
        $('#incoming-socket-status').addClass('connected')
        $('#socket-status').html('<span class="connected">Connected</span>')
        @connected = true
        @setApiEvents(@socket)
        callback(@socket)
      )
      @socket.on('disconnect', () =>
        @connected = false
        console.log('Socket.IO disconnected')
        $('#incoming-socket-status').removeClass()
        $('#incoming-socket-status').addClass('disconnected')
        $('#socket-status').html('<span class="disconnected">You got disconnected.' +
                                 '  <a href="#" id="socket-reconnect">Reconnect</a>' +
                                 '</span>')
        $('body').off('click', '#socket-reconnect').on('click', '#socket-reconnect', () =>
          @getConnection(() ->
            console.log('Socket.IO reconnected')
          , false)
        )
      )
      @socket.on('error', (err) =>
        console.log('Socket.IO error: ' + err)
        if err == 'You already have an opened connection. To override it add replace=true to connection query.'
          $('#incoming-socket-status').removeClass()
          $('#incoming-socket-status').addClass('connection-error')
          $('#socket-status').html('<span class="connection-error">Another connection is already opened. ' +
                                   '  <a href="#" id="socket-replace-connection">Close it and retry</a>' +
                                   '</span>')
          $('body').off('click', '#socket-replace-connection').on('click', '#socket-replace-connection', () =>
            $('#socket-status').html('<span class="disconnected">Overriding connection...</span>')
            @getConnection(() ->
              console.log('Socket.IO connection overriden')
            , true)
          )
        else
          $('#socket-status').html('<span class="connection-error">"Connection failed ' + err + '</span>')
      )
    else
      callback(@socket)

  connect: () =>
    @getConnection () ->

  disconnect: () =>
    @socket.disconnect()

  emit: (action, request, callback) =>
    if action == 'update-trip-status'
      @lastUpdateByTripId[request.id] = request
    @getConnection (socket) =>
      socket.emit(action, request, callback)

  resetIncomingRequestPanel: (type, interval) =>
    clearInterval(interval)
    $('#incoming-' + type + ' .heading .incoming-request-counter').toggleClass('counting')
    $('body').off('click', '#incoming-' + type + '-content .request .request_header .accept')
    $('body').off('click', '#incoming-' + type + '-content .request .request_header .reject')
    $('#incoming-' + type + '-content .request .request_header .accept').toggleClass('disabled')
    $('#incoming-' + type + '-content .request .request_header .reject').toggleClass('disabled')
    $('#incoming-' + type + '-content .request .request_body .json').html('No active request')
    $('#incoming-' + type + '-content .response .response_body .json').html('No active request')
    $('#incoming-' + type + ' .heading .incoming-request-counter').html('0')
      
  handleRequest: (type, request, acceptResponse, rejectResponse, responseCallback) =>
    $('#incoming-' + type + '-content .request .request_body .json').html('<code class="language-javascript">' + FormatJSON(request) + '</code>')
    $('#incoming-' + type + '-content .response .response_body .json').html('<code class="language-javascript">' + FormatJSON(acceptResponse) + '</code>')
    Prism.highlightAll()
    $('#incoming-' + type + ' .heading .incoming-request-counter').toggleClass('counting')
    $('#incoming-' + type + '-content .request .request_header .accept').toggleClass('disabled')
    $('#incoming-' + type + '-content .request .request_header .reject').toggleClass('disabled')

    responded = false
    counter = 7
    $('#incoming-' + type + ' .heading .incoming-request-counter').html(counter.toString())
    interval = setInterval( () =>
      counter--
      if not responded
        if counter == 0
          responseCallback(rejectResponse)
          @resetIncomingRequestPanel(type, interval)
        else
          $('#incoming-' + type + ' .heading .incoming-request-counter').html(counter.toString())
    , 1000)

    $('body').on('click', '#incoming-' + type + '-content .request .request_header .accept', () =>
      responded = true
      @resetIncomingRequestPanel(type, interval)
      responseCallback(acceptResponse)
    )
    $('body').on('click', '#incoming-' + type + '-content .request .request_header .reject', () =>
      responded = true
      @resetIncomingRequestPanel(type, interval)
      responseCallback(rejectResponse)
    )

  setApiEvents: (socket) =>
    socket.on('dispatch-trip', (request, cb) =>
      if $('#incoming-dispatch-trip-content .response .response_body .json').html() == 'No active request'
        @handleRequest('dispatch-trip', request, @successfulResponse, @rejectedResponse, (response) =>
            if response.result == @successfulResponse.result
              $("#tripstatus_update_trip_status_put_1_body input[name='body.id']").val(request.id)
              $("#tripstatus_update_trip_status_put_1_body input[name='body.eta']").val(request.pickup_time)
              $("#tripstatus_update_trip_status_put_1_body input[name='body.driver.location.lat']").val(request.pickup_location.lat)
              $("#tripstatus_update_trip_status_put_1_body input[name='body.driver.location.lng']").val(request.pickup_location.lng)
              $("#tripstatus_update_trip_status_put_1_body input[name='body.driver.location.lng']").val(request.pickup_location.lng)
              $("#tripstatus_update_trip_status_put_1_body input[name='body.product.id']").val(@products[0].client_id)
              $("#tripstatus_update_trip_status_put_1_body input[name='body.product.name']").val(@products[0].name)
              $("#tripstatus_update_trip_status_put_1_body input[name='body.product.image_url']").val(@products[0].image_url)
              $('#payment_request_payment_post_0_body input[name="body.id"').val(request.id)
              $('#payment_request_payment_post_0_body input[name="body.currency_code"').val('USD')
              $("#tripstatus_get_trip_status_get_0_body input[name='body.id']").val(request.id)
            cb(response)
        )
      else
        cb(@rejectedResponse)
    )
    socket.on('get-trip', (request, cb) =>
      cb(@rejectedResponse)
    )
    socket.on('get-trip-status', (request, cb) =>
      if $('#incoming-get-trip-status-content .response .response_body .json').html() == 'No active request'
        acceptResponse = @rejectedResponse
        if request.id? and @lastUpdateByTripId.hasOwnProperty(request.id)
          acceptResponse = @lastUpdateByTripId[request.id]
        @handleRequest('get-trip-status', request, acceptResponse, @rejectedResponse, (response) => cb(response))
      else
        cb(@rejectedResponse)
    )
    socket.on('update-trip-status', (request, cb) =>
      if $('#incoming-update-trip-status-content .response .response_body .json').html() == 'No active request'
        @handleRequest('update-trip-status', request, @successfulResponse, @rejectedResponse, (response) => cb(response))
      else
        cb(@rejectedResponse)
    )
    socket.on('request-payment', (request, cb) =>
      if $('#incoming-request-payment-content .response .response_body .json').html() == 'No active request'
        @handleRequest('request-payment', request, @successfulResponse, @rejectedResponse, (response) => cb(response))
      else
        cb(@successfulResponse)
    )
    socket.on('accept-payment', (request, cb) =>
      if $('#incoming-accept-payment-content .response .response_body .json').html() == 'No active request'
        @handleRequest('accept-payment', request, @successfulResponse, @rejectedResponse, (response) => cb(response))
      else
        cb(@successfulResponse)
    )
    socket.on('get-quote', (request, cb) =>
      if $('#incoming-get-quote-content .response .response_body .json').html() == 'No active request'
        acceptResponse = {
          result_code: 200
          result: 'OK'
          count: 1
          quotes:[{
            id: guid()
            eta: request.pickup_time
            network: {
              id: $('#user_client_id').val()
              name: $('#user_client_id').val()
            }
            fare: {
              low_estimate: 5
              high_estimate: 15
              currency_code: 'USD'
            }
            distance: 0.166527479456
            duration: 300
          }]
        }
        @handleRequest('get-quote', request, acceptResponse, @rejectedResponse, (response) => cb(response))
      else
        cb(@rejectedResponse)
    )
    socket.on('set-network-info', (request, cb) =>
      if $('#incoming-set-network-content .response .response_body .json').html() == 'No active request'
        @handleRequest('set-network', request, @successfulResponse, @rejectedResponse, (response) => cb(response))
      else
        cb(@successfulResponse)
    )
    socket.on('get-network-info', (request, cb) =>
      if $('#incoming-get-network-content .response .response_body .json').html() == 'No active request'
        @handleRequest('get-network', request, @rejectedResponse, @rejectedResponse, (response) => cb(response))
      else
        cb(@rejectedResponse)
    )
    socket.on('get-drivers-nearby', (request, cb) =>
      if $('#incoming-get-drivers-content .response .response_body .json').html() == 'No active request'
        @handleRequest('get-drivers', request, @rejectedResponse, @rejectedResponse, (response) => cb(response))
      else
        cb(@rejectedResponse)
    )

$('.developer.api').ready ->

  reset()
  tripthru = new TripThru($('#access_token').val())
  baseUrl = tripthru.getBaseUrl()

  if !window.socket?
    window.socket = new SocketIOClient(baseUrl, $('#access_token').val(), $('#user_client_id').val())
    tripthru.getNetworks((networks) =>
      id = parseInt($('#user_id').val())
      products = []
      for network in networks
        if id == network.id
          window.socket.setProducts(network.products)
          break
    )
  else
    window.socket.connect()

  if !window.swaggerUi?
    window.swaggerUi = new SwaggerUi({
      url: baseUrl + 'api-docs'
      apiKey: $('#access_token').val()
      socket: window.socket
      dom_id: "swagger-ui-container"
      supportHeaderParams: false
      headers: { "Content-Type": "application/json"}
      supportedSubmitMethods: ['get', 'post', 'put', 'options']
      onComplete: (swaggerApi, swaggerUi) ->
        if (console)
          $('pre code').each((i, e) ->  hljs.highlightBlock(e) )
      onFailure: (data) ->
        if (console)
          console.log("Unable to Load SwaggerUI")
          console.log(data)
      docExpansion: "none"
    })
  window.swaggerUi.load()

  $('#incoming-panel').affix({
    offset: {
      top: $('#incoming-panel').offset().top - $('#header').height() - 10
    },
    target: $('#main')
  })

  $('#incoming-panel-list').height($('#main').height() - $('#header').height() - 30)
  $(window).resize(() ->
    $('#incoming-panel-list').height($('#main').height() - $('#header').height() - 30)
  )